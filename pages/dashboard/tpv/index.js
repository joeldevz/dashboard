import Head from "next/head";
import { useState, useEffect } from "react";
import ButtonBlack from "../../../components/Buttons/ButtonBasic";
import { InputBase } from "../../../components/Inputs/Input";
import LayoutTPV from "../../../components/layouts/TPV";
import { ModalLarge } from "../../../components/modals";
import SelectBasic from "../../../components/Select/SelectBasic";
import { ListItemsProduct } from "../../../components/tpv/ListItemProduct";
import { generateUuid, NumberS } from "../../../functions/utils";
const Taxes = [0, 4, 10, 21];
export default function Home() {
  const [modalProduct, setModalProduct] = useState(false);
  const closeModalProduct = () => setModalProduct(false);
  const openModalProduct = () => setModalProduct(true);
  const [products, setProducts] = useState([
    {
      id: "633c7c5c-9bfd-431b-b46d-2c7594ccc34c",
      code: 1,
      name: "product 1",
      tax: 1000,
      price: 10050,
      descount: 0,
      count: 1,
    },
    {
      id: "a0c13571-4a4e-47f8-9f88-ce56e6850edc",
      code: 2,
      name: "product 1",
      tax: 1000,
      price: 10000,
      descount: 1000,
      count: 2,
    },
  ]);

  const [descriptionOfPayment, setDescriptionOfPayment] = useState([
    {
      name: "Discount",
      count: 0,
    },
    {
      name: "TAX",
      count: 0,
    },
    {
      name: "All",
      count: 100,
    },
  ]);

  useEffect(() => {
    let all = new NumberS(0);
    let descount = new NumberS(0);
    let tax = new NumberS(0);
    products.forEach((product) => {
      const precie = new NumberS(product.price).multiple(product.count);
      const _tax = precie.getTax(product.tax);
      all = all.sum(precie.subtract(product.descount).getValue());
      descount = descount.sum(product.descount);
      tax = tax.sum(_tax.getValue());
    });
    setDescriptionOfPayment([
      {
        name: "Discount",
        count: descount.getValueFormat(),
      },
      {
        name: "TAX",
        count: tax.getValueFormat(),
      },
      {
        name: "All",
        count: all.getValueFormat(),
      },
    ]);
  }, [products]);
  return (
    <div className="w-full max-h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LayoutTPV>
        <div className="block p-6 h-full w-full bg-white rounded-lg border border-gray-200 shadow-md  dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700">
          <div className="MuiPaper-root h-full p-2 MuiPaper-elevation1 MuiPaper-rounded">
            <div className="flex flex-col rounded-lg overflow-hidden sm:flex-row w-full">
              <input
                disabled=""
                className="py-1 px-3 bg-gray-200 text-gray-800 w-full border-gray-300 border-2 outline-none placeholder-gray-500 focus:bg-gray-100"
                type="text"
                name="email"
                placeholder="Seleccionar Cliente"
              />
              <button className="py-3 px-4 bg-gray-900 text-gray-100 font-semibold uppercase hover:bg-gray-600">
                Buscar
              </button>
            </div>
            <div></div>
            <div></div>
            <div className="overflow-auto mt-5" style={{ height: 65 + "%" }}>
              <div className="py-1.5 px-2 sm:py-4 w-full sticky top-0 bg-white">
                <div className="grid grid-cols-12">
                  <div className=" col-span-2">
                    <p className="text-sm font-medium text-gray-900 truncate dark:text-white">
                      NAME
                    </p>
                  </div>
                  <div className="text-base font-semibold text-center text-gray-900 dark:text-white col-start-7">
                    IVA (%)
                  </div>
                  <div className=" text-base font-semibold text-center text-gray-900 dark:text-white col-start-8">
                    PRECIE UNIT
                  </div>
                  <div className=" text-base font-semibold text-center text-gray-900 dark:text-white col-start-9">
                    DESCOUNT
                  </div>
                  <div className=" text-base font-semibold text-center text-gray-900 dark:text-white col-start-10">
                    PRECIE ALL
                  </div>
                </div>
              </div>
              <div className="m-auto grid grid-cols-1 gap-2 overflow-y-auto p-2">
                <div className="flow-root">
                  <ListItemsProduct
                    products={products}
                    setProducts={setProducts}
                  />
                </div>
              </div>
            </div>
            <div className="">
              <div className="my-2">
                <div className="grid grid-cols-12 gap-2 ">
                  <p className=" col-span-3 font-semibold text-xs">
                    Search Product
                  </p>

                  <p className=" col-span-2 font-semibold text-xs">
                    Name Product
                  </p>
                  <p className=" col-span-1 font-semibold text-xs">Count</p>
                  <p className=" col-span-1 font-semibold text-xs">Precie</p>
                  <p className=" col-span-1 font-semibold text-xs">TAX</p>
                </div>
                <form className="grid grid-cols-12 gap-2 ">
                  <div className="flex col-span-3">
                    <button
                      onClick={openModalProduct}
                      className="  inline-flex items-center py-2.5 px-4 text-sm font-medium text-center text-white bg-black border border-gray-300 rounded-l-lg hover:bg-gray-900 focus:ring-4 focus:outline-none focus:ring-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-700 dark:text-white dark:border-gray-600"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        className="w-4 h-4"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                        ></path>
                      </svg>
                    </button>
                    <div className="relative w-full">
                      <input
                        type="search"
                        id='location-search"'
                        className="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-r-lg border-l-gray-50 border-l-2 border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-l-gray-700  dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:border-blue-500"
                        placeholder="Bar Code"
                      />
                    </div>
                  </div>
                  <InputBase
                    type="text"
                    className=" col-span-2 "
                    placeholder="Name Product"
                  />
                  <InputBase
                    type="number"
                    placeholder="Count Product"
                    className="col-span-1"
                  />
                  <InputBase
                    type="number"
                    placeholder="Precie"
                    className="col-span-1"
                  />

                  <SelectBasic className={"col-span-1"}>
                    {Taxes.map((tax) => (
                      <option key={`tax-${tax}`} value={tax}>
                        {tax}%
                      </option>
                    ))}
                  </SelectBasic>
                  <div className="grid grid-cols-2 gap-2">
                    <ButtonBlack>
                      <svg
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        className="m-auto"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M10.5858 13.4142L7.75735 10.5858L6.34314 12L10.5858 16.2427L17.6568 9.1716L16.2426 7.75739L10.5858 13.4142Z"
                          fill="currentColor"
                        />
                      </svg>
                    </ButtonBlack>
                    <ButtonBlack>
                      <svg
                        className="m-auto"
                        width="24"
                        height="24"
                        viewBox="0 0 24 24"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          fill-rule="evenodd"
                          clip-rule="evenodd"
                          d="M21.2635 2.29289C20.873 1.90237 20.2398 1.90237 19.8493 2.29289L18.9769 3.16525C17.8618 2.63254 16.4857 2.82801 15.5621 3.75165L4.95549 14.3582L10.6123 20.0151L21.2189 9.4085C22.1426 8.48486 22.338 7.1088 21.8053 5.99367L22.6777 5.12132C23.0682 4.7308 23.0682 4.09763 22.6777 3.70711L21.2635 2.29289ZM16.9955 10.8035L10.6123 17.1867L7.78392 14.3582L14.1671 7.9751L16.9955 10.8035ZM18.8138 8.98525L19.8047 7.99429C20.1953 7.60376 20.1953 6.9706 19.8047 6.58007L18.3905 5.16586C18 4.77534 17.3668 4.77534 16.9763 5.16586L15.9853 6.15683L18.8138 8.98525Z"
                          fill="currentColor"
                        />
                        <path
                          d="M2 22.9502L4.12171 15.1717L9.77817 20.8289L2 22.9502Z"
                          fill="currentColor"
                        />
                      </svg>
                    </ButtonBlack>
                  </div>
                </form>
              </div>

              <div className="grid grid-cols-8 gap-2 mb-2">
                <div className="grid grid-cols-2 col-start-7  text-right">
                  {descriptionOfPayment.map((item) => (
                    <div key={"descriptionOfPayment" + item.name}>
                      <label className="block mb-2 text-sm text-gray-600 dark:text-gray-400">
                        {item.name}
                      </label>
                      <p>{item.count}€</p>
                    </div>
                  ))}
                </div>
                <div className=" w-full">
                  <button
                    type="button"
                    className="text-white w-full ml-auto h-full bg-gradient-to-br from-purple-600 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
                  >
                    PAY
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
        {modalProduct ? (
          <ModalLarge title={"PRODUCTS"} handleClose={closeModalProduct} />
        ) : (
          ""
        )}
      </LayoutTPV>
    </div>
  );
}

export const getServerSideProps = async (context) => {
  const cookies = context.req.cookies;
  /*  if (!cookies.access && !cookies.accessUser) {
    redirect(context.res, 302, "/");
  }
  if (cookies.access) {
    redirect(context.res, 302, "/dashboard/employees");
  } */
  return {
    props: {},
  };
};
